[tox]
envlist =
    py{310, 311, 312}-{lin,mac,win}
    format
    check
    lint
    flake8
    type-check
    docs
    build
    ; upload ; Removed to avoid uploading to PyPI during CI testing. Call it with `tox -e upload`.
skip_missing_interpreters = true
requires =
    tox>=4
    virtualenv>20.2
labels =
     test = py{310, 311, 312}-{lin,mac,win}
     static = lint, format, flake8, type-check, docs

[testenv]
platform =
    lin: linux
    mac: darwin
    win: win32
deps =
    pytest
    pytest-xdist
    pytest-cov
    pytest-qt
commands =
    python -m pytest --basetemp={envtmpdir} -vv --cov=pyibisami \
           --cov-report=html --cov-report=term-missing tests {posargs}


[testenv:format]
description = Reformat all source code.
skip_install = true
deps =
    black
    isort
    autoflake
    docformatter[tomli]
commands =
    autoflake --in-place --remove-all-unused-imports --expand-star-imports \
        --ignore-init-module-imports --recursive src/ tests/
    docformatter --in-place --recursive src/ tests/
    isort src/ tests/
    black src/ tests/

[testenv:check]
description = Validate the `pyproject.toml` file.
skip_install = true
deps =
    tomli
    validate-pyproject
commands =
    validate-pyproject pyproject.toml

[testenv:lint]
description = Run linting using `lint`.
skip_install = true
deps =
    pylint
commands =
    pylint --disable=E0401 src/

; Ignore the following flake8 errors:
; E501 - Line too long
; E272 - Multiple spaces before keyword
; E241 - Multiple spaces after ','
; E222 - Multiple spaces after operator
; E221 - Multiple spaces before operator
; E203 - Whitespace before ':'
; W503 - Line break before binary operator
[testenv:flake8]
description = Run linting using `flake8`.
skip_install = true
deps =
    flake8
commands =
    flake8 --ignore=E501,E272,E241,E222,E221,E203,W503 src/

[testenv:type-check]
description = Run type checking using `mypy`.
setenv =
    MYPYPATH = {toxinidir}
deps =
    mypy
    types-PyYAML
    scipy-stubs
commands =
    python -m mypy src/

[testenv:docs]
description = Build documentation.
skip_install = true
deps =
    docutils==0.20
    scipy
    setuptools
    sphinx
    sphinx_rtd_theme
    m2r2
changedir = docs
setenv =
    PROJ_VER={env:PROJ_VER}
commands =
    sphinx-build -j auto -b html source/ build/

[testenv:build]
description = Build source tarball and wheel for distribution.
skip_install = true
deps =
    build
commands =
    python -m build

[testenv:upload]
description = Upload build products to PyPI.
skip_install = true
depends = build
deps =
    twine
commands =
    twine upload dist/{env:PROJ_NAME}-{env:PROJ_VER}.tar.gz dist/{env:PROJ_NAME}-{env:PROJ_VER}-py3-none-any.whl
